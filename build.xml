<project name="Xpl" default="integration-test" basedir=".">
  <description>
    Builds the Xpl compiler and runs the associated unit and integration tests.
  </description>

  <property name="doc"                      location="doc" />
  <property name="src"                      location="src" />
  <property name="src-xpl"                  location="${src}/xpl" />
  <property name="src-semantic"             location="${src}/xpl/semantic" />
  <property name="src-codegen"              location="${src}/xpl/codegen" />
  <property name="bin"                      location="bin" />
  <property name="classes"                  location="${bin}/classes" />
  <property name="classes-xpl"              location="${bin}/classes/xpl" />
  <property name="classes-runtime"          location="${bin}/classes/xpl/runtime" />
  <property name="classes-tests"            location="${bin}/classes/tests" />
  <property name="tests"                    location="tests/" />
  <property name="tests-unit"               location="tests/unit" />
  <property name="tests-integration"        location="tests/integration" />
  <property name="tests-integration-pos"    location="tests/integration/positive" />
  <property name="tests-integration-neg"    location="tests/integration/negative" />

  <macrodef name="antlr3">
    <attribute name="libdirectory"/>
    <attribute name="grammarname"/>
    <attribute name="outputdirectory"/>
    <sequential>
      <antlr:antlr3 xmlns:antlr="antlib:org/apache/tools/ant/antlr"
                    target="@{grammarname}"
                    outputdirectory="@{outputdirectory}"
                    libdirectory="@{libdirectory}"
                    multithreaded="${multithreaded}"
                    report="${report}"
                    depend="${depend}"
                    profile="${profile}">
      </antlr:antlr3>
    </sequential>
  </macrodef>

  <taskdef resource="net/sf/antcontrib/antlib.xml"/>

  <target name="init">
    <tstamp/>
    <delete>
      <fileset dir="${tests-integration}">
        <include name="*.class"/>
        <include name="*.output-current"/>
        <include name="*.output-diff"/>
        <include name="*.compilation"/>
      </fileset>
    </delete>
  </target>

  <target name="compile-grammars" depends="init" description="compile the ANTLR grammars">
    <antlr3 grammarname="${src-xpl}/Xpl.g" libdirectory="${src-xpl}" outputdirectory="${src-xpl}" />
    <antlr3 grammarname="${src-semantic}/SemanticAnalysis.g" libdirectory="${src-xpl}" outputdirectory="${src-semantic}" />
    <antlr3 grammarname="${src-codegen}/CodeGeneration.g" libdirectory="${src-semantic}" outputdirectory="${src-codegen}" />
  </target>

  <target name="compile" depends="compile-grammars" description="compile the source">
    <javac srcdir="${src}" destdir="${classes}" debug="true"/>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <jar basedir="${classes}" excludes="tests/** xpl/runtime/**" jarfile="${bin}/xpl.jar">
      <manifest>
        <attribute name="Main-Class" value="xpl/Xpl" />
        <attribute name="Class-Path" value="antlr-runtime-3.1.jar asm-all-3.1.jar" />
      </manifest>
    </jar>

    <jar basedir="${classes}" includes="xpl/runtime/**" jarfile="${bin}/runtime.jar" />
  </target>

  <target name="compile-test" depends="dist" description="compile the tests">
    <javac srcdir="${tests-unit}" destdir="${classes-tests}">
      <classpath>
        <pathelement location="${bin}/xpl.jar"/>
      </classpath>
    </javac>

    <javac srcdir="${tests-integration}" destdir="${classes-tests}">
      <classpath>
        <pathelement location="${bin}/xpl.jar"/>
      </classpath>
    </javac>
  </target>

  <target name="test" depends="compile-test" description="run the unit and integration tests">
    <junit haltonfailure="yes" haltonerror="yes">
      <classpath>
        <pathelement path="${bin}/xpl.jar"/>
        <pathelement path="${classes-tests}"/>
        <pathelement path="${java.class.path}"/>
      </classpath>

      <formatter type="brief" usefile="false" />

      <batchtest>
        <fileset dir="${tests-unit}" />
      </batchtest>
    </junit>
  </target>

  <target name="integration-test" depends="test" description="compile and run tests from tests/integration creating appropiate output files">
    <for param="file">
      <path>
        <fileset dir="${tests-integration-pos}" includes="*.xpl"/>
      </path>
      <sequential>
        <basename property="@{file}-test-name" file="@{file}" suffix=".xpl" />

        <java jar="${bin}/xpl.jar" fork="true" output="${tests-integration-pos}/${@{file}-test-name}.compilation" failonerror="true">
          <arg value="@{file}" />
          <arg value="${tests-integration-pos}/${@{file}-test-name}.class" />
        </java>

        <java classpath="${tests-integration-pos}:${bin}/runtime.jar" classname="${@{file}-test-name}" fork="true" output="${tests-integration-pos}/${@{file}-test-name}.output-current" outputproperty="run-failure" />

        <exec executable="cat" output="${tests-integration-pos}/${@{file}-test-name}.output-diff">
          <arg value="${tests-integration-pos}/${@{file}-test-name}.xpl" />
        </exec>

        <exec executable="echo" output="${tests-integration-pos}/${@{file}-test-name}.output-diff" append="true">
          <arg value="---------------" />
        </exec>

        <exec executable="diff" output="${tests-integration-pos}/${@{file}-test-name}.output-diff" append="true">
          <arg value="-y"/>
          <arg value="${tests-integration-pos}/${@{file}-test-name}.output-desired"/>
          <arg value="${tests-integration-pos}/${@{file}-test-name}.output-current"/>
        </exec>
      </sequential>
    </for>

    <for param="file">
      <path>
        <fileset dir="${tests-integration-neg}" includes="*.xpl"/>
      </path>
      <sequential>
        <basename property="@{file}-test-name" file="@{file}" suffix=".xpl" />

        <java jar="${bin}/xpl.jar" fork="true" output="${tests-integration-neg}/${@{file}-test-name}.compilation-current">
          <arg value="@{file}" />
          <arg value="${tests-integration-neg}/${@{file}-test-name}.class" />
        </java>
      </sequential>
    </for>


    <junit haltonfailure="yes" haltonerror="yes" showoutput="yes">
      <classpath>
        <pathelement path="${classes-tests}"/>
        <pathelement path="${java.class.path}"/>
      </classpath>

      <test name="IntegrationTest">
      </test>
    </junit>
  </target>

  <target name="doc" description="generate JavaDoc documentation" depends="integration-test">
    <javadoc packagenames="xpl.*" sourcepath="${src}" destdir="${doc}" author="true" version="true" charset="utf-8" />
  </target>

  <target name="clean" description="clean up">
    <delete includeemptydirs="true">
      <fileset dir="${doc}" includes="**/*"/>
    </delete>

    <delete>
      <fileset dir="${classes}" includes="**/*.class"/>
    </delete>

    <delete file="${src-xpl}/XplLexer.java"/>
    <delete file="${src-xpl}/XplParser.java"/>
    <delete file="${src-semantic}/SemanticAnalysis.java"/>
    <delete file="${src-codegen}/CodeGeneration.java"/>
    <delete file="${bin}/runtime.jar"/>
    <delete file="${bin}/xpl.jar"/>
  </target>
</project>
